/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {

public:
    vector<int> record;
    ListNode* Head;
    Solution(ListNode* head) {
        Head = head;
        while(Head){
            record.push_back(Head->val);
            Head = Head->next;
        }
    }
    
    int getRandom() {
        if(record.size() == 0)  return NULL;
        return record[rand()%record.size()];
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(head);
 * int param_1 = obj->getRandom();
 */

//一般求一个范围里的随机用rand()%
