/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* Traverse(vector<int>& nums,int l,int m){
        if(l > m)   return NULL;
        int mid = l + (m - l) / 2;
        TreeNode* root = new TreeNode(nums[mid]);
        root->left = Traverse(nums,l,mid-1);
        root->right = Traverse(nums,mid+1,m);
        return root;
    }

    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return Traverse(nums,0,nums.size()-1);
    }
};
